name: Solar System Workflow

on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    container:
      image: 'node:18'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: Unit Testing
        run: npm test
      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm install
      - name: Run Coverage
        continue-on-error: true
        run: npm run coverage
      - name: Upload Code Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs:
      - code-coverage
      - unit-testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/vamshibadavath/solar-system:${{ github.sha }}

  dev-deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Verify Kubernetes Version
        run: kubectl version --output=yaml
      - name: Set Ingress IP Environment Variable
        run: echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
      - name: Replace Tokens in YAML Files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: 'kubernetes/development/*.yaml'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ghcr.io/vamshibadavath/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}
      - name: Display YAML Files
        run: cat kubernetes/development/*.yaml

  integration-test:
    needs: dev-deploy
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}
